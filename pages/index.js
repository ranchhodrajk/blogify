import React, { useState, useEffect } from "react";
import s from "../styles/Home.module.scss";

import moment from "moment";
import Head from "next/head";
import BackBlogCard from "../components/BackBlogCard/BackBlogCard";
import NameBar from "../components/NameBar/NameBar";
import MainCard from "../components/MainCard/MainCard";
import SmallOne from "../components/SmallOne/SmallOne";
import SlickSlider from "../components/SlickSilder/SlickSlider";
import SmallNine from "../components/SmallNine/SmallNine";

import {setCookie,getCookie } from '../utilities/cookies'
import { useQuery } from "@apollo/client";
import { GETPOSTS } from "../apollo/query/getPosts";
import { useRouter } from "next/router";
import { GETCATEGORIES } from "../apollo/query/getCategories";
import { RightOutlined } from "@ant-design/icons";
import { Row, Col, Button, Tabs, Affix, Tag, Empty, Spin } from "antd";
import TopBlogSlide from "../components/TopBlogSlide/TopBlogSlide";

export default function Home() {
  const todayDate = new Date();
  const yesterdayDate = todayDate - 24 * 60 * 60 * 1000;

  const { TabPane } = Tabs;
  const router = useRouter(); 

  const { loading, error, data } = useQuery(GETPOSTS);
  const { loading: loadingCat, error: errorCat, data: dataCat } = useQuery(
    GETCATEGORIES
  );


  const [mostLikeFourdata, setmostLikeFourdata] = useState([]);
  const [todayData, settodayData] = useState([]);
  const [yesterdayData, setyesterdayData] = useState([]);
  const [isLogin, setisLogin] = useState();
  const [fourData, setfourData] = useState([]);

  

  useEffect(() => {
    const isLog = localStorage.getItem("isLoggin");
    const isLoggin = JSON.parse(isLog);
    setisLogin(isLoggin);

    const getToken = getCookie('token');
    // console.log('getTokenHome',getToken);

    // if(isLoggin===true && getToken===null){
    //   router.push("/signIn")
    // }

  }, []);

  useEffect(() => {
    const fourDt = data?.getPosts?.slice(1, 5);
    setfourData(fourDt);
  }, [data]);

  function sortByLike(array, key) {
    array = array?.slice().sort((a, b) => b[key] - a[key]);
    setmostLikeFourdata(array?.slice(1, 7));
  }

  function getDataByDate(array, date) {
    return array?.filter((val) => {
      return (
        moment(date)?.format("MMMM Do YYYY") ==
        moment(val.created_at)?.format("MMMM Do YYYY")
      );
    });
  }

  useEffect(() => {
    sortByLike(data?.getPosts, "likeCount");
    settodayData(getDataByDate(data?.getPosts, todayDate));
    setyesterdayData(getDataByDate(data?.getPosts, yesterdayDate));
  }, [data]);

  

  return (
    <div className={s.container}>
      <Head>
        <title>Blogify | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <TopBlogSlide /> */}

      {loading ? (
        <div className={`${s.loadDiv} mySpinCustom`}>
          <Spin size="large" />
        </div>
      ) : (
        <div className={s.oneWrap}>
          <div className={s.firstContainer}>
            <Row>
              <Col lg={12} xs={24}>
                <div className={s.firstLeft}>
                  <BackBlogCard
                    imgPath="/Assets/watch.jpeg"
                    id={data?.getPosts[0]?.id}
                    title={data?.getPosts[0]?.body?.substring(0, 40)}
                    user={data?.getPosts[0]?.username}
                    date={data?.getPosts[0]?.created_at}
                    category={
                      data?.getPosts[0]?.tags?.name
                        ? data?.getPosts[0]?.tags?.name
                        : "General"
                    }
                    loading={loading}
                  />
                </div>
              </Col>
              <Col lg={12} xs={24}>
                <div className={s.firstRightUp}>
                  <Row>
                    {fourData?.map((item, index) => (
                      <Col lg={12} xs={12} key={Math.random()}>
                        <BackBlogCard
                          id={item?.id}
                          imgPath={`/Assets/blog${index}.jpg`}
                          title={item?.body.substring(0, 40)}
                          user={item?.username}
                          date={item?.created_at}
                          category={
                            item?.tags?.name ? item?.tags?.name : "General"
                          }
                        />
                      </Col>
                    ))}
                  </Row>
                </div>
              </Col>
            </Row>
          </div>
          <div className={s.secondContainer}>
            <Row justify="center">
              <Col xs={22}>
                <Row gutter={30}>
                  <Col lg={16}>
                    <div className={s.thirdDetail}>
                      <div className={s.nameBar}>
                        <NameBar name="Blog of the week" isView={true} />
                      </div>

                      <div className={s.containt}>
                        <SlickSlider data={data} />
                      </div>
                    </div>
                  </Col>

                  <Col lg={8} xs={24}>
                    {/* {isLogin ? ( */}
                    <div className={s.mainRightMid}>
                      <div className={s.nameBar}>
                        <NameBar name="Your Blogs" isView={false} />
                      </div>
                      <div className={s.containt}>
                        <div className={s.scrollContainer}>
                          <div className={s.smallnine}>
                            <SmallNine imgPath="/Assets/first1.jpg" />
                          </div>
                          <div className={s.smallnine}>
                            <SmallNine imgPath="/Assets/first2.jpeg" />
                          </div>
                          <div className={s.smallnine}>
                            <SmallNine imgPath="/Assets/first3.jpeg" />
                          </div>
                          <div className={s.smallnine}>
                            <SmallNine imgPath="/Assets/blog1.jpg" />
                          </div>
                          <div className={s.smallnine}>
                            <SmallNine imgPath="/Assets/blog1.jpg" />
                          </div>
                          <div className={s.smallnine}>
                            <SmallNine imgPath="/Assets/blog1.jpg" />
                          </div>
                          <div className={s.smallnine}>
                            <SmallNine imgPath="/Assets/blog1.jpg" />
                          </div>
                        </div>
                      </div>
                    </div>
                    {/* // ) : (
                //   ""
                // )} */}

                    <div className={s.mainRightBot}>
                      <div className={s.nameBar}>
                        <NameBar name="Categories" isView={false} />
                      </div>
                      <div className={s.containt}>
                        <div className={s.scrollContainer}>
                          {dataCat?.getTags?.map((item) => (
                            <div  className={s.cateList} key={Math.random()}>
                              {item.name.charAt(0).toUpperCase() +
                                item.name.slice(1)}
                              <RightOutlined style={{ fontSize: "11px" }} />
                            </div>
                          ))}
                        </div>
                      </div>
                    </div>
                  </Col>
                </Row>

                

                <Row>
                  <Col md={24}>
                    <div className={s.secondDetail}>
                      <div className={s.nameBar}>
                        <NameBar name="Trending on blogify" isView={true} />
                      </div>

                      <div className={s.containt}>
                        <Row>
                          <Col md={24}>
                            <div className={s.containtBot}>
                              <Row>
                                {mostLikeFourdata?.map((item, index) => (
                                  <Col md={8} xs={24} key={Math.random()}>
                                    <SmallOne
                                      id={item?.id}
                                      imgPath={`/Assets/first${index}.jpg`}
                                      title={item?.body?.substring(0, 40)}
                                      user={item?.username}
                                      date={item?.created_at}
                                    />
                                  </Col>
                                ))}
                              </Row>
                            </div>
                          </Col>
                        </Row>
                      </div>
                    </div>
                  </Col>
                </Row>
              </Col>
            </Row>
          </div>
        </div>
      )}
    </div>
  );
}
